{"ast":null,"code":"import Personel from \"@/models/PersonelModel\";\nconst url = 'http://localhost:5090';\nexport default {\n  getPersonel() {\n    const personel = new Personel(123, 1234567890, \"engin\", \"hazar\", 141.47, '2022-12-29', \"yüzüncü yıl mahallesi\");\n    return personel;\n  },\n  async savePersonel(personelModel) {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(personelModel)\n    };\n    await fetch(url + \"/api/Personel\", requestOptions).then(async response => {\n      //const data = await response;\n\n      // check for error response\n      if (!response.ok) {\n        const data = await response;\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n      //onst data = await response;\n    }).catch(error => {\n      console.log(error);\n      console.error(\"error yaz\");\n      this.errorMessage = error;\n      console.error('There was an error!', error);\n    });\n  }\n};","map":{"version":3,"names":["Personel","url","getPersonel","personel","savePersonel","personelModel","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","ok","data","error","message","status","Promise","reject","catch","console","log","errorMessage"],"sources":["C:/Users/e.hazar/source/repos/RabitMQElasticSearch/Vue/personel/src/services/PersonelService.js"],"sourcesContent":["import Personel from \"@/models/PersonelModel\"\r\n\r\nconst  url='http://localhost:5090';\r\n\r\nexport default {\r\n\r\n\r\n    getPersonel(){\r\n        const personel=new Personel(123,1234567890,\"engin\",\"hazar\",141.47,'2022-12-29',\"yüzüncü yıl mahallesi\");\r\n        return personel; \r\n    },\r\n\r\n   async savePersonel(personelModel ){\r\n        \r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(personelModel)\r\n        };\r\n         await fetch(url+\"/api/Personel\", requestOptions) .then(async response => {\r\n            //const data = await response;\r\n      \r\n            // check for error response\r\n            if (!response.ok) {\r\n                const data = await response;\r\n              // get error message from body or default to response status\r\n             const error = (data && data.message) || response.status;\r\n              return Promise.reject(error);\r\n            }\r\n            //onst data = await response;\r\n         \r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n            console.error(\"error yaz\");\r\n            this.errorMessage = error;\r\n            console.error('There was an error!', error);\r\n          });\r\n       \r\n\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,wBAAwB;AAE7C,MAAOC,GAAG,GAAC,uBAAuB;AAElC,eAAe;EAGXC,WAAW,GAAE;IACT,MAAMC,QAAQ,GAAC,IAAIH,QAAQ,CAAC,GAAG,EAAC,UAAU,EAAC,OAAO,EAAC,OAAO,EAAC,MAAM,EAAC,YAAY,EAAC,uBAAuB,CAAC;IACvG,OAAOG,QAAQ;EACnB,CAAC;EAEF,MAAMC,YAAY,CAACC,aAAa,EAAE;IAE7B,MAAMC,cAAc,GAAG;MACnBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,aAAa;IACtC,CAAC;IACA,MAAMO,KAAK,CAACX,GAAG,GAAC,eAAe,EAAEK,cAAc,CAAC,CAAEO,IAAI,CAAC,MAAMC,QAAQ,IAAI;MACtE;;MAEA;MACA,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAMC,IAAI,GAAG,MAAMF,QAAQ;QAC7B;QACD,MAAMG,KAAK,GAAID,IAAI,IAAIA,IAAI,CAACE,OAAO,IAAKJ,QAAQ,CAACK,MAAM;QACtD,OAAOC,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;MAC9B;MACA;IAEF,CAAC,CAAC,CACDK,KAAK,CAACL,KAAK,IAAI;MACdM,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC;MAClBM,OAAO,CAACN,KAAK,CAAC,WAAW,CAAC;MAC1B,IAAI,CAACQ,YAAY,GAAGR,KAAK;MACzBM,OAAO,CAACN,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CAAC;EAGR;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}